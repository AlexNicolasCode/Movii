import Head from 'next/head';
import Link from 'next/link';
import { Movie } from '../src/components/movie/movie'
import { GetStaticProps } from 'next'
import { api } from '../src/services/api'

import { AllCategories, Category, OptionsCategories } from '../src/components/styles/styles'
import { Gender } from '../src/components/categories/gender'
import styles from '../styles/Home.module.scss'
import { useState } from 'react';
import { useFilter } from '../src/contexts/filter';
import { FilterModel } from '../src/components/filter';

type MovieData = {
  id: string,
  title: string,
  vote_average: string,
  poster_path: string
}

type Genres = {
  id: number,
  name: string  
}

type HomeProps = {
  allMovies: MovieData[],
  genres: Genres[]
}

export default function Home({ allMovies, genres }: HomeProps) {
  const [ categories, setCategories ] = useState<boolean>(false)
  const { currentFiltersData } = useFilter()

  const toggleCaregoriesButtonStatus = () => {
    if (categories === true) {
      setCategories(false);
    } else {
      setCategories(true);
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>The Most Popular Movies</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&family=Roboto:wght@400;500&display=swap" rel="stylesheet"></link>
      </Head>

      <header>
        <section>
          {currentFiltersData.map((filter, index: number) => {
              return <FilterModel index={index} name={filter.name}/>
            })
          }
        </section>

        <section>
          <OptionsCategories onClick={toggleCaregoriesButtonStatus}>
            Categories
          </OptionsCategories>
          { categories &&
            <AllCategories>
              {genres.map(gender => {
                return <Gender name={gender.name} />
              })}
            </AllCategories>
          }
        </section>
      </header>

      <main className={styles.main}>
        <Category>The Most Popular Movies</Category>

        <section>
          {allMovies.map((movie) => {
            return (
              <>
                <Link key={movie.id} href={`/movie/${movie.id}`}>
                  {movie.title}
                </Link>
                <Movie id={movie.id} rate={movie.vote_average} image={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} />
              </>
            )
          })}
        </section>
      </main>

      <footer className={styles.footer}>
        <span>Developed by Alex Nicolas</span>
      </footer>
    </div>
  )
}

export const getStaticProps: GetStaticProps = async () => {
  const { data } = await api.get('movie/popular?api_key=c87d684e83e180236e81d0dae298e88c', {
    params: {
      _limit: 12,
      _sort: 'published_at',
      _order: 'desc'
    }
  })

  const genresData = await api.get('genre/movie/list?api_key=c87d684e83e180236e81d0dae298e88c')
  const genres = genresData.data.genres

  const allMovies = data.results

  return {
    props: {
        allMovies,
        genres
      },
    }
} 

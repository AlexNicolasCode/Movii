import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import { api } from "../../src/services/api"
import { Movie } from '../../src/components/movie'
import { useFilter } from '../../src/contexts/filter'
import { useRouter } from 'next/dist/client/router'

type MovieData = {
    movie: {
        id: number,
        title: string,
        vote_average: string,
        poster_path: string,
        backdrop_path: string,
        overview: string
    },
    similarMovies: SimilarMovieData[];
}

type SimilarMovieData = {
    id: string,
    title: string,
    poster_path: string
}

type Slug = {
    id: number
}

export default function MoviePage({ movie, similarMovies }: MovieData) {
    const { currentSlug } = useFilter();
    const BASE_URL = "https://image.tmdb.org/t/p/w500";

    const router = useRouter();
    const backToHomepage = (route: string) => {
        route === undefined ? router.push('/') : router.push(route)
    }

    return (
        <div style={{ backgroundImage: `url(${BASE_URL}/${movie.backdrop_path}) no-repeat fixed` }}>
            <Head>
                <title>{movie.title}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="preconnect" href="https://fonts.gstatic.com" />
                <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&family=Roboto:wght@400;500&display=swap" rel="stylesheet"></link>
            </Head>

            <main>
                <aside>
                    <button onClick={() => backToHomepage(`/${currentSlug}`)}>
                        Voltar
                    </button>
                </aside>

                <section>
                    <img src={`${BASE_URL}/${movie.poster_path}`} alt={movie.title} layout='fill' />
                </section>

                <article>
                    <h1>{movie.title}</h1>
                    <h2>Sinopse</h2>
                    <p>{movie.overview}</p>           
                </article>

                <aside>
                    <span>{movie.vote_average}</span>
                </aside>

                <section>
                    <h2>Another Movies</h2>
                    {similarMovies.map((movie) => {
                        return (
                            <Movie key={movie.id} id={movie.id} image={`${BASE_URL}/${movie.poster_path}`} />
                        )
                    })}
                </section>
            </main>
        </div>
    )
}

export const getStaticPaths = async () => { 
    const { data } = await api.get('movie/popular?api_key=c87d684e83e180236e81d0dae298e88c')

    const movies = data.results

    const paths = movies.map((item: Slug) => {
        const id = toString(item.id)

        return {
            params: {
                slug: id
            },
        }
    })
    
    return { 
        paths,
        fallback: 'blocking'
    }
}

type ctxType = {
    params: { 
        slug: string
    }
}
    
export const getStaticProps = async (ctx: ctxType) => {
    const { slug } = ctx.params;

    const { data } = await api.get(`movie/${slug}?api_key=c87d684e83e180236e81d0dae298e88c`);
    const movie = data;

    const dataSimilarMovies = await api.get(`movie/${slug}/similar?api_key=c87d684e83e180236e81d0dae298e88c`);
    const similarMovies = await dataSimilarMovies.data.results;

    return {
        props: {
          movie,
          similarMovies
        },
    }
}
